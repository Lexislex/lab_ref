#!/usr/bin/env python3
"""–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ lab_ref.

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –û–û–ü API
–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á–∏.
"""

import lab_ref


def demo_functional_api():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ API –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞–µ–≤."""
    print("=== –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô API (–¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞–µ–≤) ===\n")
    
    # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    print("1. –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è:")
    status = lab_ref.check_value("blood_test", "hemoglobin", 145, sex="male", age=30)
    print(f"   lab_ref.check_value(...) -> {status}")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–∞
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:")
    ref = lab_ref.get_reference("blood_test", "hemoglobin", sex="male", age=30)
    print(f"   –†–µ—Ñ–µ—Ä–µ–Ω—Å: {ref['min']}-{ref['max']} {ref['unit']}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å—Ä–∞–∑—É
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π:")
    results = lab_ref.check_value(
        "blood_test",
        {"hemoglobin": 125, "leukocytes": 5.5},
        sex="male",
        age=30
    )
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {results}")
    
    print("\n" + "="*60 + "\n")


def demo_oop_api():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –û–û–ü API –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤."""
    print("=== –û–û–ü API (–¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤) ===\n")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–æ–≤
    print("1. –†–∞–±–æ—Ç–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–æ–≤:")
    manager = lab_ref.ReferenceManager("blood_test")
    print(f"   –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫: {manager.name}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏: {len(manager)} —à—Ç—É–∫")
    print(f"   –°–ø–∏—Å–æ–∫: {', '.join(manager.list_tests()[:3])}...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
    print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞:")
    test = manager.create_test("hemoglobin", 145, "male", 30)
    print(f"   –¢–µ—Å—Ç: {test}")
    print(f"   –°—Ç–∞—Ç—É—Å: {test.status}")
    print(f"   –í –Ω–æ—Ä–º–µ: {test.is_normal()}")
    
    # –†–∞–±–æ—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–æ–≤
    print("\n3. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ü–µ–ª–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:")
    lab_result = lab_ref.LabResult("blood_test", sex="male", age=35)
    lab_result.add_results({
        "hemoglobin": 120,  # –ø–æ–Ω–∏–∂–µ–Ω–Ω—ã–π
        "leukocytes": 6.5   # –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π
    })
    
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(lab_result)}")
    print(f"   –ï—Å—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {lab_result.has_abnormalities()}")
    
    # –ê–Ω–∞–ª–∏–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
    abnormal = lab_result.get_abnormal_tests()
    print(f"   –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {list(abnormal.keys())}")
    
    summary = lab_result.get_summary()
    print(f"   –°–≤–æ–¥–∫–∞: {summary}")
    
    print("\n" + "="*60 + "\n")


def demo_fluent_interface():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è fluent interface."""
    print("=== FLUENT INTERFACE (—Ü–µ–ø–æ—á–∫–∏ –≤—ã–∑–æ–≤–æ–≤) ===\n")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —á–µ—Ä–µ–∑ —Ü–µ–ø–æ—á–∫—É –≤—ã–∑–æ–≤–æ–≤
    result = (lab_ref.LabResult("blood_test")
              .set_patient_info("female", 28)
              .add_result("hemoglobin", 110)  # –ø–æ–Ω–∏–∂–µ–Ω–Ω—ã–π –¥–ª—è –∂–µ–Ω—â–∏–Ω
              .add_result("leukocytes", 4.5))
    
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Ü–µ–ø–æ—á–∫—É –≤—ã–∑–æ–≤–æ–≤:")
    print(f"  –ü–∞—Ü–∏–µ–Ω—Ç: {result.sex}, {result.age} –ª–µ—Ç")
    print(f"  –ü–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π: {len(result)}")
    print(f"  –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {result.has_abnormalities()}")
    
    # Fluent interface –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
    manager = lab_ref.ReferenceManager("blood_test")
    test = (manager.create_test("hemoglobin")
            .set_value(160)
            .set_patient_info("female", 30))
    
    print(f"\n–û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç: {test}")
    
    print("\n" + "="*60 + "\n")


def demo_integration():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏ –û–û–ü –ø–æ–¥—Ö–æ–¥–æ–≤."""
    print("=== –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ü–û–î–•–û–î–û–í ===\n")
    
    # –û–û–ü –æ–±—ä–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π API
    result = lab_ref.LabResult("blood_test", "male", 30)
    
    print("1. –û–û–ü –æ–±—ä–µ–∫—Ç –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π API:")
    functional_status = result.check_value_functional("hemoglobin", 145)
    print(f"   –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {functional_status}")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result.add_result("hemoglobin", 145)
    oop_status = result.get_test("hemoglobin").status
    print(f"   –û–û–ü —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {oop_status}")
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç: {functional_status == oop_status}")
    
    print("\n2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –û–û–ü –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤—ã–≤–æ–¥–∞:")
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –û–û–ü
    manager = lab_ref.ReferenceManager("blood_test")
    
    # –í—ã–≤–æ–¥–∏–º –æ—Ç—á–µ—Ç —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π API
    print("   –û—Ç—á–µ—Ç —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π API:")
    lab_ref.print_reference_report("blood_test")
    
    print("\n" + "="*60 + "\n")


def demo_when_to_use_what():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–¥—Ö–æ–¥–∞."""
    print("=== –ö–û–ì–î–ê –ß–¢–û –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ ===\n")
    
    print("üîß –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô API - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è:")
    print("   ‚Ä¢ –ë—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–¥–Ω–æ–≥–æ-–¥–≤—É—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π")
    print("   ‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
    print("   ‚Ä¢ –ü—Ä–æ—Å—Ç—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏ —Ä–∞–∑–æ–≤—ã—Ö –∑–∞–¥–∞—á")
    print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥")
    
    print("\nüì¶ –û–û–ü API - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è:")
    print("   ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ü–µ–ª—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤")
    print("   ‚Ä¢ –†–∞–±–æ—Ç—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏")
    print("   ‚Ä¢ –°–ª–æ–∂–Ω–æ–π –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏")
    print("   ‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º")
    print("   ‚Ä¢ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω—ã –æ—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
    
    print("\nüí° –ü–†–ò–ú–ï–†–´ –í–´–ë–û–†–ê:")
    
    print("\n   –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–¥–∏–Ω –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å")
    print("   ‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π: lab_ref.check_value('blood_test', 'hemoglobin', 145)")
    print("   ‚ùå –û–û–ü: —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π –∑–∞–¥–∞—á–∏")
    
    print("\n   –ó–∞–¥–∞—á–∞: –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞")
    print("   ‚ùå –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π: –º–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä—è—é—â–µ–≥–æ—Å—è –∫–æ–¥–∞")
    print("   ‚úÖ –û–û–ü: LabResult —Å –º–µ—Ç–æ–¥–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏")
    
    print("\n   –ó–∞–¥–∞—á–∞: –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏")
    print("   ‚úÖ –û–û–ü: —É–¥–æ–±–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –º–µ—Ç–æ–¥—ã, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ORM")
    
    print("\n   –ó–∞–¥–∞—á–∞: CLI —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("   ‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π: –º–∏–Ω–∏–º—É–º –∫–æ–¥–∞, –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    
    print("\n" + "="*60 + "\n")


def demo_real_world_scenarios():
    """–†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
    print("=== –†–ï–ê–õ–¨–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò ===\n")
    
    print("üìã –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è")
    print("   –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Ç–Ω–∏ –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –¥–µ–Ω—å")
    
    # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    print("\n   –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π:")
    critical_hemoglobin = lab_ref.check_value("blood_test", "hemoglobin", 80, "female", 45)
    if critical_hemoglobin == "below":
        print("   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –Ω–∏–∑–∫–∏–π –≥–µ–º–æ–≥–ª–æ–±–∏–Ω! –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ –≤—Ä–∞—á–∞")
    
    # –û–û–ü –ø–æ–¥—Ö–æ–¥ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    print("\n   –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ü–∏–µ–Ω—Ç–∞:")
    patient_results = lab_ref.LabResult("blood_test", "female", 45)
    patient_results.add_results({
        "hemoglobin": 80,
        "leukocytes": 12.5  # –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π
    })
    
    if patient_results.has_abnormalities():
        print("   üìä –ù–∞–π–¥–µ–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç...")
        abnormal = patient_results.get_abnormal_tests()
        for name, test in abnormal.items():
            print(f"      ‚Ä¢ {test.name_ru}: {test.value} [{test.status}]")
    
    print("\nüè• –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ")
    print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–≤–æ–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_profile = lab_ref.LabResult("blood_test", "male", 32)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
    print("\n   –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏–∫–∏:")
    monthly_results = [
        {"hemoglobin": 140, "leukocytes": 6.0},  # —è–Ω–≤–∞—Ä—å
        {"hemoglobin": 135, "leukocytes": 5.8},  # —Ñ–µ–≤—Ä–∞–ª—å
        {"hemoglobin": 145, "leukocytes": 6.2},  # –º–∞—Ä—Ç
    ]
    
    for i, results in enumerate(monthly_results, 1):
        month_result = lab_ref.LabResult("blood_test", "male", 32)
        month_result.add_results(results)
        summary = month_result.get_summary()
        print(f"      –ú–µ—Å—è—Ü {i}: {summary['normal']} –≤ –Ω–æ—Ä–º–µ, {summary['below'] + summary['above']} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π")
    
    print("\nüî¨ –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞")
    print("   –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–∞—É—á–Ω–æ–π —Å—Ç–∞—Ç—å–∏")
    
    # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    print("\n   –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö 1000 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:")
    sample_data = [
        ("male", 25, 145), ("female", 30, 125), ("male", 45, 150)
    ]
    
    results_distribution = {"normal": 0, "below": 0, "above": 0}
    for sex, age, hb_value in sample_data:
        status = lab_ref.check_value("blood_test", "hemoglobin", hb_value, sex, age)
        results_distribution[status] += 1
    
    print(f"      –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {results_distribution}")
    
    print("\n" + "="*60 + "\n")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("ü©∫ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ì–ò–ë–†–ò–î–ù–û–ì–û –ü–û–î–•–û–î–ê –í LAB_REF\n")
    print("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–≤–∞ API –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:\n")
    
    try:
        demo_functional_api()
        demo_oop_api()
        demo_fluent_interface()
        demo_integration()
        demo_when_to_use_what()
        demo_real_world_scenarios()
        
        print("‚úÖ –í–°–ï –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π API –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á:")
        print("‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Üí –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π API")
        print("‚Ä¢ –°–ª–æ–∂–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚Üí –û–û–ü API")
        print("‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ‚Üí –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()
